     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_io_in8
     7 00000000                                 	EXTERN	_io_out8
     8 00000000                                 [FILE "mouse.c"]
     9                                          [SECTION .text]
    10 00000000                                 	GLOBAL	_wait_KBC_sendready
    11 00000000                                 _wait_KBC_sendready:
    12 00000000 55                              	PUSH	EBP
    13 00000001 89 E5                           	MOV	EBP,ESP
    14 00000003                                 L2:
    15 00000003 6A 64                           	PUSH	100
    16 00000005 E8 [00000000]                   	CALL	_io_in8
    17 0000000A 5A                              	POP	EDX
    18 0000000B 83 E0 02                        	AND	EAX,2
    19 0000000E 75 F3                           	JNE	L2
    20 00000010 C9                              	LEAVE
    21 00000011 C3                              	RET
    22 00000012                                 	GLOBAL	_init_keyboard
    23 00000012                                 _init_keyboard:
    24 00000012 55                              	PUSH	EBP
    25 00000013 89 E5                           	MOV	EBP,ESP
    26 00000015 E8 FFFFFFE6                     	CALL	_wait_KBC_sendready
    27 0000001A 6A 60                           	PUSH	96
    28 0000001C 6A 64                           	PUSH	100
    29 0000001E E8 [00000000]                   	CALL	_io_out8
    30 00000023 E8 FFFFFFD8                     	CALL	_wait_KBC_sendready
    31 00000028 6A 47                           	PUSH	71
    32 0000002A 6A 60                           	PUSH	96
    33 0000002C E8 [00000000]                   	CALL	_io_out8
    34 00000031 C9                              	LEAVE
    35 00000032 C3                              	RET
    36 00000033                                 	GLOBAL	_enable_mouse
    37 00000033                                 _enable_mouse:
    38 00000033 55                              	PUSH	EBP
    39 00000034 89 E5                           	MOV	EBP,ESP
    40 00000036 E8 FFFFFFC5                     	CALL	_wait_KBC_sendready
    41 0000003B 68 000000D4                     	PUSH	212
    42 00000040 6A 64                           	PUSH	100
    43 00000042 E8 [00000000]                   	CALL	_io_out8
    44 00000047 E8 FFFFFFB4                     	CALL	_wait_KBC_sendready
    45 0000004C 68 000000F4                     	PUSH	244
    46 00000051 6A 60                           	PUSH	96
    47 00000053 E8 [00000000]                   	CALL	_io_out8
    48 00000058 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
    49 0000005B C6 40 03 00                     	MOV	BYTE [3+EAX],0
    50 0000005F C9                              	LEAVE
    51 00000060 C3                              	RET
    52 00000061                                 	GLOBAL	_mouse_decode
    53 00000061                                 _mouse_decode:
    54 00000061 55                              	PUSH	EBP
    55 00000062 89 E5                           	MOV	EBP,ESP
    56 00000064 56                              	PUSH	ESI
    57 00000065 53                              	PUSH	EBX
    58 00000066 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
    59 00000069 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
    60 0000006C 89 CE                           	MOV	ESI,ECX
    61 0000006E 8A 42 03                        	MOV	AL,BYTE [3+EDX]
    62 00000071 84 C0                           	TEST	AL,AL
    63 00000073 75 11                           	JNE	L9
    64 00000075 80 F9 FA                        	CMP	CL,-6
    65 00000078 74 06                           	JE	L18
    66 0000007A                                 L17:
    67 0000007A 31 C0                           	XOR	EAX,EAX
    68 0000007C                                 L8:
    69 0000007C 5B                              	POP	EBX
    70 0000007D 5E                              	POP	ESI
    71 0000007E 5D                              	POP	EBP
    72 0000007F C3                              	RET
    73 00000080                                 L18:
    74 00000080 C6 42 03 01                     	MOV	BYTE [3+EDX],1
    75 00000084 EB F4                           	JMP	L17
    76 00000086                                 L9:
    77 00000086 3C 01                           	CMP	AL,1
    78 00000088 74 61                           	JE	L19
    79 0000008A 3C 02                           	CMP	AL,2
    80 0000008C 74 54                           	JE	L20
    81 0000008E 3C 03                           	CMP	AL,3
    82 00000090 74 05                           	JE	L21
    83 00000092 83 C8 FF                        	OR	EAX,-1
    84 00000095 EB E5                           	JMP	L8
    85 00000097                                 L21:
    86 00000097 8A 1A                           	MOV	BL,BYTE [EDX]
    87 00000099 81 E6 000000FF                  	AND	ESI,255
    88 0000009F 89 D8                           	MOV	EAX,EBX
    89 000000A1 88 4A 02                        	MOV	BYTE [2+EDX],CL
    90 000000A4 83 E0 07                        	AND	EAX,7
    91 000000A7 89 72 08                        	MOV	DWORD [8+EDX],ESI
    92 000000AA 89 42 0C                        	MOV	DWORD [12+EDX],EAX
    93 000000AD 88 D8                           	MOV	AL,BL
    94 000000AF 0F B6 4A 01                     	MOVZX	ECX,BYTE [1+EDX]
    95 000000B3 83 E0 10                        	AND	EAX,16
    96 000000B6 89 4A 04                        	MOV	DWORD [4+EDX],ECX
    97 000000B9 C6 42 03 01                     	MOV	BYTE [3+EDX],1
    98 000000BD 84 C0                           	TEST	AL,AL
    99 000000BF 74 09                           	JE	L15
   100 000000C1 81 C9 FFFFFF00                  	OR	ECX,-256
   101 000000C7 89 4A 04                        	MOV	DWORD [4+EDX],ECX
   102 000000CA                                 L15:
   103 000000CA 83 E3 20                        	AND	EBX,32
   104 000000CD 84 DB                           	TEST	BL,BL
   105 000000CF 74 07                           	JE	L16
   106 000000D1 81 4A 08 FFFFFF00               	OR	DWORD [8+EDX],-256
   107 000000D8                                 L16:
   108 000000D8 F7 5A 08                        	NEG	DWORD [8+EDX]
   109 000000DB B8 00000001                     	MOV	EAX,1
   110 000000E0 EB 9A                           	JMP	L8
   111 000000E2                                 L20:
   112 000000E2 88 4A 01                        	MOV	BYTE [1+EDX],CL
   113 000000E5 C6 42 03 03                     	MOV	BYTE [3+EDX],3
   114 000000E9 EB 8F                           	JMP	L17
   115 000000EB                                 L19:
   116 000000EB 83 E6 C8                        	AND	ESI,-56
   117 000000EE 89 F0                           	MOV	EAX,ESI
   118 000000F0 3C 08                           	CMP	AL,8
   119 000000F2 75 86                           	JNE	L17
   120 000000F4 88 0A                           	MOV	BYTE [EDX],CL
   121 000000F6 C6 42 03 02                     	MOV	BYTE [3+EDX],2
   122 000000FA E9 FFFFFF7B                     	JMP	L17
   123 000000FF                                 	GLOBAL	_mdec
   124                                          [SECTION .data]
   125 00000000                                 	ALIGNB	16
   126 00000000                                 _mdec:
   127 00000000 00 00 00 00 00 00 00 00 00 00   	RESB	16
       0000000A 00 00 00 00 00 00 
